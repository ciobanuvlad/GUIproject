package GUI;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.time.LocalDate;
import java.util.Properties;
import java.util.Scanner;
import java.util.logging.Logger;

import javax.swing.JOptionPane;

import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.UtilDateModel;

import org.apache.commons.lang3.StringUtils;

import command.AddExpenses;
import command.AgendaToFile;
import command.Forecast;
import command.ListExpenses;
import command.ReadFromFile;
import command.Statistics;
import exceptions.NegativeNumberException;
import exceptions.NoDataAvailableException;
import model.Agenda;
import model.Expense;
import model.Frequence;

/**
 *
 * @author Vlad
 */
public class GUI extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	public static final Logger LOGGER = Logger.getGlobal();
	/**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        LOGGER.info("Initialize swing components of GUI Framework");
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        AddExpense = new AddExpenses();
        UtilDateModel model = new UtilDateModel();
        model.setDate(LocalDate.now().getYear(),LocalDate.now().getMonthValue(),LocalDate.now().getDayOfMonth());;
        model.setSelected(true);
        Properties p = new Properties();
        p.put("text.today", "Today");
        p.put("text.month", "Month");
        p.put("text.year", "Year");
        JDatePanelImpl datePanel = new JDatePanelImpl(model,p);
        date4AddedExpense = new JDatePickerImpl(datePanel, new DateLabelFormatter());
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        budgetTxTF = new javax.swing.JTextField();
        setBudgetButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton3 = new Statistics();
        jTextField6 = new javax.swing.JTextField();
        jButton4 = new Statistics();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        yearForecast = new javax.swing.JComboBox<>();
        yearForecastYearMonth = new javax.swing.JComboBox<>();
        monthForecastYearMonth = new javax.swing.JComboBox<>();
        yearForecastBtn = new Forecast();
        yearMonthForecastBtn = new Forecast();
        exit = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        expensesTable = new javax.swing.JTable();
        year4Expenses = new javax.swing.JComboBox<>();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new JDatePickerImpl(datePanel, new DateLabelFormatter());
        showExpensesByYear = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        
        agenda = Agenda.getAnAgenda();
        ReadFromFile rff = new ReadFromFile();
        rff.setAgenda(agenda);
        rff.execute();
        
        ListExpenses lex = new ListExpenses();
        lex.setA(agenda);
        lex.execute();
        expensesToTable();
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Expense");

        jLabel2.setText("Name");

        jLabel3.setText("Value");

        jLabel4.setText("Frequency");

        jLabel5.setText("Date");

        jTextField1.setText("introduce your expense");

        jTextField2.setText("jTextField2");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Daily", "Weekly", "Monthly", "Year" }));


        AddExpense.setText("ADD");
        AddExpense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					AddExpenseActionPerformed(evt);
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });


        jLabel6.setText("Budget");

        jLabel7.setText("Value");

        budgetTxTF.setText("budgetTxTF");

        setBudgetButton.setText("ADD");
        setBudgetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					setBudgetActionPerformed(evt);
				} catch (Exception e) {
					e.printStackTrace();
				}
                
                
                
            }
        });
        
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
              
                
            }
        });
        
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
              
                
            }
        });
        
        yearForecastBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					forecastUsingYearActionPerformed(evt);
				} catch (Exception e) {
					e.printStackTrace();
				}
              
                
            }
        });
        
        yearMonthForecastBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					monthYearForecastActionPerformed(evt);
				} catch (Exception e) {
					e.printStackTrace();
				}
              
                
            }
        });
        
        showExpensesByYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showExpensesByYearBtn(evt);
              
                
            }
        });
        
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
              AgendaToFile atof = new AgendaToFile();
              atof.setAgenda(agenda);
              atof.execute();
              System.exit(0);
              
                
            }
        });


        jLabel8.setText("Statistics");

        jLabel9.setText("Year/Daily");

        jLabel10.setText("Year/Month");

        jTextField5.setText("jTextField5");

        jButton3.setText("View");

        jTextField6.setText("jTextField6");

        jButton4.setText("View");

        jLabel11.setText("Forecast");

        jLabel12.setText("Year");

        jLabel13.setText("Year-Month");

        yearForecast.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010","2011", "2012", "2013", "2014", "2015", "2016" }));


        yearForecastYearMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010","2011", "2012", "2013", "2014", "2015", "2016" }));
        monthForecastYearMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"January","February","March","April","May","June","July","August","September","November","December"}));


        yearForecastBtn.setText("View");

        yearMonthForecastBtn.setText("View");
        exit.setText("Exit and Save!");

        jLabel14.setText("Expenses");

        jLabel15.setText("Frequency");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Daily", "Weekly", "Monthly", "Year" }));

        jLabel16.setText("Year");

        jLabel17.setText("Year/Month");

        jLabel18.setText("Date");

        expensesTable.setBackground(new java.awt.Color(153, 0, 255));
        expensesTable.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        expensesTable.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        
        
        expensesTable.setModel(new javax.swing.table.DefaultTableModel(
            mdeafisat,
            new String [] {
                "Name", "Value", "Date", "Frequency"
            }
        ));
        jScrollPane1.setViewportView(expensesTable);

        year4Expenses.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010","2011", "2012", "2013", "2014", "2015", "2016" }));


        jTextField10.setText("jTextField10");


        showExpensesByYear.setText("VIEW");

        jButton8.setText("VIEW");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("VIEW");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(setBudgetButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(86, 86, 86)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel7)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel4)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(40, 40, 40)
                                                .addComponent(budgetTxTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(date4AddedExpense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(AddExpense, javax.swing.GroupLayout.Alignment.TRAILING))))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel10))
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel11))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(237, 237, 237)
                        .addComponent(jLabel8)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addComponent(jLabel14))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(yearForecastYearMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(monthForecastYearMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(yearForecast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(yearForecastBtn)
                                    .addComponent(yearMonthForecastBtn)
                                    .addComponent(exit)
                                    ))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton4)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel18))
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(year4Expenses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(49, 49, 49)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton9)
                                            .addComponent(jButton8)
                                            .addComponent(showExpensesByYear))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42))))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap(1200, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel14))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel2)
                                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel3)
                                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(23, 23, 23)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel9)
                                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton3)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(year4Expenses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(showExpensesByYear))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4)
                            .addComponent(jLabel17)
                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            )
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(date4AddedExpense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9)
                    )
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddExpense)
                        .addGap(109, 109, 109)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(budgetTxTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(yearForecast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yearForecastBtn))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(setBudgetButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(150, 150, 150)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(yearForecastYearMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(monthForecastYearMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(yearMonthForecastBtn)
                                    
                                    ))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(exit))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddExpenseActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
    	LOGGER.info("Set the agenda for the AddExpense button");
    	AddExpense.setA(agenda);
    	String name = jTextField1.getText();
    	String value = jTextField2.getText();
    	
    	if(value.indexOf('.')>0 || !StringUtils.isNumeric(value)){
    		this.errorMessage="Number format not allowed";
    	    showMessage();
    	    NumberFormatException e=new NumberFormatException();
    	    throw e;
    	}
    	
    	int price;
    	
    	price= Integer.parseInt(value);
    	if(price<0){
    		NegativeNumberException e=new NegativeNumberException();
    		this.setErrorMessage(e.getMessage());
    		showMessage();
    		throw e;
    	}
    	
    	LOGGER.info("The received price is"+price);

    	String type = jComboBox1.getSelectedItem().toString();
    	Frequence tip = Frequence.Daily;
    	if (type.equals("Daily"))
    		tip = Frequence.Daily;
    	if (type.equals("Weekly"))
    		tip = Frequence.Weekly;
    	if (type.equals("Monthly"))
    		tip = Frequence.Monthly;
    	if (type.equals("Yearly"))
    		tip = Frequence.Yearly;



    	int an=date4AddedExpense.getModel().getYear();
    	int luna=date4AddedExpense.getModel().getMonth();
    	int zi=date4AddedExpense.getModel().getDay();

    	LocalDate ld= LocalDate.of(an, luna, zi);

    	Expense exp = new Expense(name, price, ld , tip);
    	AddExpense.setE(exp);
    	AddExpense.execute();
    	AgendaToFile af=new AgendaToFile();
    	af.setAgenda(agenda);
    	af.execute();
     
    	//showMessage();
    }

    private void setBudgetActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
        String buget;
        buget=budgetTxTF.getText();
        
        if(buget.indexOf('.')>0 || !StringUtils.isNumeric(buget)){
    		this.errorMessage="Number format not allowed";
    	    showMessage();
    	    NumberFormatException e=new NumberFormatException();
    	    throw e;
    	}
        
        budget=Integer.parseInt(buget);
        
        if(budget<0){
    		NegativeNumberException e=new NegativeNumberException();
    		this.setErrorMessage(e.getMessage());
    		showMessage();
    		throw e;
    	}
        
        LOGGER.info("The available budget is: "+budget);
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt){
    	jButton3.setAgenda(agenda);
    	jButton3.setFrq(Frequence.Daily);
    	String s= jTextField5.getText();
    	int an=Integer.parseInt(s);
    	jButton3.setAn(an);
    	jButton3.execute();
    	String txtLabel = agenda.getExpenses().get(jButton4.getPozMax()).toString();
    	System.out.println(txtLabel);
    }
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt){
    	jButton4.setAgenda(agenda);
    	jButton4.setFrq(Frequence.Monthly);
    	String s= jTextField6.getText();
    	int an=Integer.parseInt(s);
    	jButton4.setAn(an);
    	jButton4.execute();
    	String txtLabel = agenda.getExpenses().get(jButton4.getPozMax()).toString();
    	System.out.println(txtLabel);
    }
    
    private void forecastUsingYearActionPerformed(java.awt.event.ActionEvent evt) throws Exception{
    	yearForecastBtn.setAgenda(agenda);
    	String san= yearForecast.getSelectedItem().toString();
    	int an=Integer.parseInt(san.trim());
    	LOGGER.info("We produce a forecast using year-statistics for:"+an);
    	LocalDate dStart=LocalDate.of(an, 1, 1);
    	LocalDate dEnd=LocalDate.of(an, 12, 31);
    	LOGGER.info("Forecast start date it is: "+dStart);
    	LOGGER.info("Forecast end date it is: "+dEnd);
    	yearForecastBtn.setStart(dStart);
    	yearForecastBtn.setStop(dEnd);
    	yearForecastBtn.execute();
    	float forecast=yearForecastBtn.getForecast();
    	if(forecast==0){
    		NoDataAvailableException e=new NoDataAvailableException();
    		this.setErrorMessage(e.getMessage());
    		showMessage();
    		throw e;
    	}
    	String txtLabel=Float.toString(forecast);
    	showMessage("The forecast for next year using as base "+an+" it is: "+txtLabel);
    	LOGGER.info("The forecast value it is:"+txtLabel);
    }
    
    public int endMonth(int year,int month){
    	int result=0;
    	if(month==1 || month==3||month==5||month==7||month==8||month==10||month==12)
    		result=31;
    	if(month==4 || month==6||month==9||month==11)
    		result=30;
    	if(month==2 && year%4!=0 ||year%100==0)
    		result=28;
    	if(month==2 && (year%4==0 || (year%400==0 && year%100==0)))
    		result=29;
    	LOGGER.info("We produce the ending day of month "+month+" of Year"+year+":"+result);
    	return result;
    }
    
    private void monthYearForecastActionPerformed(java.awt.event.ActionEvent evt) throws Exception{
    	yearMonthForecastBtn.setAgenda(agenda);
    	int year=Integer.parseInt(yearForecastYearMonth.getSelectedItem().toString());
    	int month=monthForecastYearMonth.getSelectedIndex()+1;
    	LOGGER.info("We produce a forecast for next month using as base moth "+month+"of year "+year);
    	LocalDate dStart=LocalDate.of(year, month, 1);
    	LOGGER.info("The start date for forecast it is:"+dStart);
    	LocalDate dEnd=LocalDate.of(year, month, endMonth(year,month));
    	LOGGER.info("The end date for forecast it is:"+dEnd);
    	yearMonthForecastBtn.setStart(dStart);
    	yearMonthForecastBtn.setStop(dEnd);
    	yearMonthForecastBtn.execute();
    	float forecast=yearMonthForecastBtn.getForecast();
    	if(forecast==0){
    		NoDataAvailableException e=new NoDataAvailableException();
    		this.setErrorMessage(e.getMessage());
    		showMessage();
    		throw e;
    	}
    	String txtLabel=Float.toString(forecast);
    	showMessage("The forecast for next month using as base month "+month+" year "+year+" it is: "+txtLabel);
    	LOGGER.info("The forecast value it is:"+txtLabel);
    }
    
    
    /**
     * 
     * @param evt
     */
    private void showExpensesByYearBtn(java.awt.event.ActionEvent evt){
    	String s = year4Expenses.getSelectedItem().toString();
    	LOGGER.info("We show expenses for year:"+s);
    	int an= Integer.parseInt(s);
    	int k = 0;
    	String type = jComboBox1.getSelectedItem().toString();
    	Frequence tip = Frequence.Daily;
    	if (type.equals("Daily"))
    		tip = Frequence.Daily;
    	if (type.equals("Weekly"))
    		tip = Frequence.Weekly;
    	if (type.equals("Monthly"))
    		tip = Frequence.Monthly;
    	if (type.equals("Yearly"))
    		tip = Frequence.Yearly;

    	for(int i=0;i<agenda.getExpenses().size(); i++ ){
    		if(agenda.getExpenses().get(i).getDate().getYear()==an && agenda.getExpenses().get(i).getFrq().equals(tip)){
    			mdeafisat[k][0]=agenda.getExpenses().get(i).getName();
    			mdeafisat[k][1]=agenda.getExpenses().get(i).getValue();
    			mdeafisat[k][2]=agenda.getExpenses().get(i).getDate();
    			mdeafisat[k][3]=agenda.getExpenses().get(i).getFrq();
    			k++;
    		}
    	}
    	if(k==0){
    		mdeafisat[0][0]=null;
        	mdeafisat[0][1]=null;
        	mdeafisat[0][2]=null;
        	mdeafisat[0][3]=null;
    		
    	}
    	for(int i=k+1; i<10; i++){
    		mdeafisat[i][0]=null;
        	mdeafisat[i][1]=null;
        	mdeafisat[i][2]=null;
        	mdeafisat[i][3]=null;
    	}
    	 expensesTable.setModel(new javax.swing.table.DefaultTableModel(
    	            mdeafisat,
    	            new String [] {
    	                "Name", "Value", "Date", "Frequency"
    	            }
    	        ));
    }


    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        LOGGER.info("We show all expenses for month,year:");
    }
    
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        int day=jTextField11.getModel().getDay();
        int month=jTextField11.getModel().getMonth();
        int year = jTextField11.getModel().getYear();
        LocalDate ld=LocalDate.of(year, month, day);
    	LOGGER.info("We show all expenses for date:"+ld);
    	
    	String type = String.valueOf(jComboBox1.getSelectedItem());
    	LOGGER.info("Type is:"+type);
    	Frequence tip = Frequence.Daily;
    	if (type.equals("Daily"))
    		tip = Frequence.Daily;
    	if (type.equals("Weekly"))
    		tip = Frequence.Weekly;
    	if (type.equals("Monthly"))
    		tip = Frequence.Monthly;
    	if (type.equals("Yearly"))
    		tip = Frequence.Yearly;
    	
    	int k=0;
    	
    	for(int i=0;i<agenda.getExpenses().size(); i++ ){
    		if(agenda.getExpenses().get(i).getDate().equals(ld) && agenda.getExpenses().get(i).getFrq().equals(tip)){
    			mdeafisat[k][0]=agenda.getExpenses().get(i).getName();
    			mdeafisat[k][1]=agenda.getExpenses().get(i).getValue();
    			mdeafisat[k][2]=agenda.getExpenses().get(i).getDate();
    			mdeafisat[k][3]=agenda.getExpenses().get(i).getFrq();
    			k++;
    		}
    	}
    	if(k==0){
    		mdeafisat[0][0]=null;
        	mdeafisat[0][1]=null;
        	mdeafisat[0][2]=null;
        	mdeafisat[0][3]=null;
    		
    	}
    	for(int i=k+1; i<10; i++){
    		mdeafisat[i][0]=null;
        	mdeafisat[i][1]=null;
        	mdeafisat[i][2]=null;
        	mdeafisat[i][3]=null;
    	}
    	 expensesTable.setModel(new javax.swing.table.DefaultTableModel(
    	            mdeafisat,
    	            new String [] {
    	                "Name", "Value", "Date", "Frequency"
    	            }
    	        ));
   
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
            
            
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
               
                
                new GUI().setVisible(true);
            }
        });
    }

    public void expensesToTable(){

    	for(int i=0; i<agenda.getExpenses().size(); i++){

    		mdeafisat[i][0]=agenda.getExpenses().get(i).getName();
    		mdeafisat[i][1]=agenda.getExpenses().get(i).getValue();
    		mdeafisat[i][2]=agenda.getExpenses().get(i).getDate();
    		mdeafisat[i][3]=agenda.getExpenses().get(i).getFrq();

    	}
    	
    	
    	
    }
    
    public void showMessage() {
        JOptionPane.showMessageDialog(null,this.errorMessage);
        LOGGER.info("We show the error-message ["+this.errorMessage+"]");
    }
    
    public void showMessage(String s){
    	JOptionPane.showMessageDialog(null,s);
    	LOGGER.info("We show the message ["+s+"]");
    }
    
    
    /**
	 * @return the errorMessage
	 */
	public String getErrorMessage() {
		return errorMessage;
	}

	/**
	 * @param errorMessage the errorMessage to set
	 */
	public void setErrorMessage(String errorMessage) {
		this.errorMessage = errorMessage;
	}


	private static Agenda agenda;
    private int budget;
    private String errorMessage;
    
    
    Object[][] mdeafisat=new Object [][] {
        {"bere", "2", "Daily", "2016-4-6"},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
    };

    private AddExpenses AddExpense;
    private javax.swing.JButton setBudgetButton;
    private Statistics jButton3;
    private Statistics jButton4;
    private Forecast yearForecastBtn;
    private Forecast yearMonthForecastBtn;
    private javax.swing.JButton exit;
    private javax.swing.JButton showExpensesByYear;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable expensesTable;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private JDatePickerImpl jTextField11;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField budgetTxTF;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JComboBox<String> yearForecast;
    private javax.swing.JComboBox<String> yearForecastYearMonth;
    private javax.swing.JComboBox<String> monthForecastYearMonth;
    private javax.swing.JComboBox<String> year4Expenses;
    private JDatePickerImpl date4AddedExpense;

}
